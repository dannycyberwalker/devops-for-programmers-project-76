- hosts: all
  become: true
  gather_facts: yes

  vars:
    datadog_api_key: "{{ DATADOG_KEY }}"
    datadog_site: "datadoghq.eu"
    app_path: ~/app
    pip_install_packages:
      - name: docker  

  pre_tasks:
    - name: Install dependencies
      apt:
        name: 
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common
        state: present
        update_cache: yes
        
    - name: Add GPG
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add docker rep
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: Install docker
      apt:
        name: 
          - docker-ce
          - docker-ce-cli
          - containerd.io        
        state: latest
        update_cache: yes
            
    - name: Check docker service status
      service:
        name: docker
        state: started
        enabled: yes
      notify: Restart docker
           
  roles:
    - role: geerlingguy.pip
    - role: datadog.datadog
      when: inventory_hostname in groups['webservers']
      

  tasks:
    - name: Creates directory
      ansible.builtin.file:
        path: /etc/datadog-agent/conf.d/http_check.d
        state: directory
        owner: dd-agent
      when: inventory_hostname in groups['webservers']

    - name: Copy file with owner and permissions
      ansible.builtin.copy:
        src: services/datadog/http_check.yaml
        dest: /etc/datadog-agent/conf.d/http_check.d/http_check.yaml
        owner: dd-agent
      when: inventory_hostname in groups['webservers']
      notify: Restart Datadog

    - name: Creates directory
      file:
        path: "{{ app_path }}"
        state: directory

    - name: Copy environment variable
      ansible.builtin.copy:
        src: .env
        dest: "{{ app_path }}/.env"

    - name: Run redmine container    
      community.docker.docker_container:
        name: app
        image: redmine:latest
        restart_policy: always
        state: started
        ports:
          - 3000:3000
        env:
          REDMINE_DB_PASSWORD: "{{ DB_PASSWORD }}"
        env_file: "{{ app_path }}/.env"

  handlers:
    - name: Restart docker
      service: 
        name: docker 
        state: restarted

    - name: Restart Datadog
      service: 
        name: datadog-agent 
        state: restarted
  