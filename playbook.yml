- hosts: all
  become: true
  gather_facts: yes

  vars:
    datadog_api_key: "{{ DATADOG_KEY }}"
    datadog_site: "datadoghq.eu"
    app_path: app
    pip_install_packages:
      - name: docker  
           
  roles:
    - role: geerlingguy.pip
    - role: datadog.datadog
      when: groups['webservers'] is defined and inventory_hostname in groups['webservers'] 

  tasks:
    - name: Creates datadog directory
      ansible.builtin.file:
        path: /etc/datadog-agent/conf.d/http_check.d
        state: directory
        owner: dd-agent
      when: groups['webservers'] is defined and inventory_hostname in groups['webservers']

    - name: Copy http health check config
      ansible.builtin.copy:
        src: services/datadog/http_check.yaml
        dest: /etc/datadog-agent/conf.d/http_check.d/http_check.yaml
        owner: dd-agent
      when: groups['webservers'] is defined and inventory_hostname in groups['webservers']
      notify: Restart Datadog

    - name: Creates app directory
      ansible.builtin.file:
        path: "{{ app_path }}"
        state: directory

    - name: Copy environment variable
      ansible.builtin.copy:
        dest: "{{ app_path }}/.env"
        content: |
          REDMINE_DB_POSTGRES={{ REDMINE_DB_POSTGRES }}
          REDMINE_DB_PORT={{ REDMINE_DB_PORT }}
          REDMINE_DB_DATABASE={{ REDMINE_DB_DATABASE }}
          REDMINE_DB_USERNAME={{ REDMINE_DB_USERNAME }}

    - name: Run redmine container    
      community.docker.docker_container:
        name: app
        image: redmine:latest
        restart_policy: always
        state: started
        ports:
          - 3000:3000
        env:
          REDMINE_DB_PASSWORD: "{{ DB_PASSWORD }}"
        env_file: "{{ app_path }}/.env"

  handlers:
    - name: Restart Datadog
      ansible.builtin.service: 
        name: datadog-agent 
        state: restarted
  